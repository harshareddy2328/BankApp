var module=angular.module("s3FileUpload",[]).directive("s3FileUpload",["$parse","$q","$http",function(u,q,t){return{restrict:"A",scope:!0,controller:["$scope","$element","$attrs","$transclude",function(a,e,c,p){function g(b,c){a.errorSelecter.css({display:"block"});a.s3Status.error=!0;a.s3Status.errorCode=b;a.s3Status.errorMsg=c;a.$apply();a[a.errorCall](null,a.s3Status);throw Error(a.s3Status.errorMsg+" (S3 Error Code:"+a.s3Status.errorCode+")");}a.s3Status={success:!1,error:!1,uploading:!1,uploaded:!1,
progressCount:0,path:null,fileName:null,targetFileName:null,file:null,errorMsg:null,errorCode:null};a.progressSelecter=angular.element(e[0].querySelector("s3-progress"));a.completeSelecter=angular.element(e[0].querySelector("s3-success"));a.errorSelecter=angular.element(e[0].querySelector("s3-error"));a.progressSelecter.css({display:"none"});a.completeSelecter.css({display:"none"});a.errorSelecter.css({display:"none"});a.successCall=c.s3SuccessCall;a.preCall=c.s3PreCall;a.errorCall=c.s3ErrorCall;
a.upload=function(b,c,e,f,h,n,l,d,r){if(void 0!=a.preCall)b[a.preCall](b.s3Status);var k=q.defer();b.attempt=!0;h=new FormData;h.append("key",e);h.append("acl",f);h.append("Content-Type",r.type);h.append("AWSAccessKeyId",n);h.append("policy",l);h.append("signature",d);h.append("file",r);f=new XMLHttpRequest;f.upload.addEventListener("progress",function(c){a.progressSelecter.css({display:"block"});a.completeSelecter.css({display:"none"});a.errorSelecter.css({display:"none"});b.$apply(function(){b.s3Status.progressCount=
c.lengthComputable?Math.round(100*c.loaded/c.total):"unable to compute";var a={type:"progress",value:b.progress};b.$emit("s3upload:progress",a);"function"===typeof k.notify&&k.notify(a)})},!1);f.addEventListener("load",function(d){var f=d.srcElement||d.target;b.$apply(function(){self.uploads--;b.s3Status.uploading=!1;if(204===f.status){a.completeSelecter.css({display:"block"});a.progressSelecter.css({display:"none"});a.errorSelecter.css({display:"none"});if(void 0!=a.successCall)b[a.successCall](d,
b.s3Status);b.s3Status.success=!0;b.s3Status.uploaded=!0;k.resolve(f);b.$emit("s3upload:success",f,{path:c+e})}else{a.completeSelecter.css({display:"none"});a.progressSelecter.css({display:"none"});a.errorSelecter.css({display:"block"});if(void 0!=a.errorCall)b[a.errorCall](d,b.s3Status);a.s3Status.success=!1;a.s3Status.error=!0;k.reject(f);b.$emit("s3upload:error",f);g(4,"Error in Parameters provided to the AWS For Auth, So XMLHttpRequest cannot load!")}})},!1);f.addEventListener("error",function(c){if(void 0!=
a.errorCall)b[a.errorCall](c,b.s3Status);a.completeSelecter.css({display:"none"});a.progressSelecter.css({display:"none"});a.errorSelecter.css({display:"block"});var d=c.srcElement||c.target;b.$apply(function(){self.uploads--;b.s3Status.uploading=!1;b.s3Status.success=!1;k.reject(d);b.$emit("s3upload:error",d)});g(4,"Error in Parameters provided to the AWS For Auth, So XMLHttpRequest cannot load!")},!1);f.addEventListener("abort",function(a){var c=a.srcElement||a.target;b.$apply(function(){self.uploads--;
b.s3Status.uploading=!1;b.s3Status.success=!1;k.reject(c);b.$emit("s3upload:abort",c)})},!1);b.$emit("s3upload:start",f);b.s3Status.path=c+e;b.s3Uploading=!0;this.uploads++;f.open("POST",c,!0);f.send(h);return k.promise};a.getUploadOptions=function(b){var c=q.defer();t.get(b).success(function(a,b){c.resolve(a)}).error(function(e,f){c.reject(e);a.completeSelecter.css({display:"none"});a.progressSelecter.css({display:"none"});a.errorSelecter.css({display:"block"});g(5,"Error in Request to '"+b+"' to get S3 Access information!")});
return c.promise};a.setErrorObj=function(a,c){g(a,c)};a.checkValidation=function(){0==c.s3FileUpload.length&&g(1,"Bucket is undefined, Please Provide a Valid Bucket Name to 's3-file-upload' attribute.");void 0!=c.s3Folder&&0!=c.s3Folder.length||g(2,"Folder is undefined, Please Provide a Valid Folder Name to 's3-folder' attribute.");void 0!=c.s3AccessUri&&0!=c.s3Folder.length||g(3,"S3 Aceess Uri is undefined, Please Provide a Valid Aceess Uri location to 's3-aceess-uri' attribute.")};a.randomString=
function(a){for(var b="";0<a;--a)b+="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"[Math.round(61*Math.random())];return b}}],link:function(a,e,c){function p(){a.s3Status={success:!1,error:!1,uploading:!1,uploaded:!1,progressCount:0,path:null,fileName:null,targetFileName:null,file:null,errorMsg:null,errorCode:null};a.progressSelecter.css({display:"none"});a.completeSelecter.css({display:"none"});a.errorSelecter.css({display:"none"});a.$apply();a.checkValidation();a.progressSelecter.css({display:"block"});
var d=b[0].files[0].name;a.s3Status.fileName=d;a.s3Status.file=b[0].files[0];void 0!=c.s3TargetName&&0!=c.s3TargetName.length&&(d=c.s3TargetName+d.slice(d.lastIndexOf(".")),"[random]"==c.s3TargetName&&(d=b[0].files[0].name,d=d.replace(/ /g,""),d=(new Date).getTime()+"-"+a.randomString(16)+"-"+d),a.s3Status.targetFileName=d);g.key=c.s3Folder+"/"+d;g.file=b[0].files;g.file=b[0].files;a.getUploadOptions(c.s3AccessUri).then(function(b){a.upload(a,g.uri,g.key,g.acl,g.type,b.key,b.policy,b.signature,g.file)})}
var g={uri:"https://"+c.s3FileUpload+".s3.amazonaws.com/",key:null,acl:"public-read",type:null,accessKey:null,policy:null,signature:null,file:null},b=null,k=null;e=angular.element(e[0].children);for(var m=0;m<e.length;m++)for(var f=angular.element(e[m].attributes),h=0;h<f.length;h++){var n=angular.element(f[h]);"s3-file-model"==n[0].name&&(b=angular.element(e[m]));"s3-file-submit"==n[0].name&&(k=angular.element(e[m]))}var l=!0;e=c.s3AutoUpload;void 0!=e&&"false"==e&&(l=!1);b.bind("click",function(a){b[0].files[0]=
null});b.bind("change",function(c){l&&p();b[0].files[0]=null;a.$apply});l||k.bind("click",function(c){l||(void 0==b[0].files[0]?a.setErrorObj(6,"No files is Selected, Please Select a file before upload!"):p());b[0].files[0]=null;a.$apply})}}}]);